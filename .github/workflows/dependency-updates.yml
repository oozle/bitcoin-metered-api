name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 20
          cache: 'npm'

      - name: Install npm-check-updates
        run: npm install -g npm-check-updates

      - name: Check for dependency updates
        id: updates
        run: |
          # Check for updates and save output
          ncu -u --target minor --reject eslint,@typescript-eslint/eslint-plugin,@typescript-eslint/parser > ncu-output.txt
          
          # Check if there are any changes
          if git diff --quiet package.json; then
            echo "has_updates=false" >> $GITHUB_OUTPUT
          else
            echo "has_updates=true" >> $GITHUB_OUTPUT
          fi

      - name: Install updated dependencies
        if: steps.updates.outputs.has_updates == 'true'
        run: npm install

      - name: Run tests with updated dependencies
        if: steps.updates.outputs.has_updates == 'true'
        run: |
          npm run typecheck
          npm run lint
          npm test
        continue-on-error: true

      - name: Create Pull Request
        if: steps.updates.outputs.has_updates == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: 'chore: automated dependency updates'
          body: |
            ## Dependency Updates
            
            This PR contains automated dependency updates:
            
            ```
            $(cat ncu-output.txt)
            ```
            
            ### Changes
            - Updated minor and patch versions of dependencies
            - Excluded ESLint and TypeScript ESLint plugins (require manual review)
            
            ### Testing
            - ✅ Type checking passed
            - ✅ Linting passed  
            - ✅ Tests passed
            
            ### Notes
            Please review the changes before merging. Some updates might require code adjustments.
          branch: dependency-updates/automated
          delete-branch: true

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: |
          npm audit --audit-level=moderate --json > audit-results.json || true

      - name: Check for vulnerabilities
        id: audit
        run: |
          VULN_COUNT=$(cat audit-results.json | jq '.metadata.vulnerabilities.total // 0')
          echo "vulnerability_count=$VULN_COUNT" >> $GITHUB_OUTPUT
          
          if [ "$VULN_COUNT" -gt 0 ]; then
            echo "has_vulnerabilities=true" >> $GITHUB_OUTPUT
            # Generate human-readable report
            npm audit --audit-level=moderate > audit-report.txt || true
          else
            echo "has_vulnerabilities=false" >> $GITHUB_OUTPUT
          fi

      - name: Create security issue
        if: steps.audit.outputs.has_vulnerabilities == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'security: address npm audit vulnerabilities'
          title: '🚨 Security: npm audit found vulnerabilities'
          body: |
            ## Security Alert
            
            npm audit found ${{ steps.audit.outputs.vulnerability_count }} vulnerabilities that need attention.
            
            ### Audit Report
            ```
            $(cat audit-report.txt)
            ```
            
            ### Recommended Actions
            1. Review each vulnerability carefully
            2. Update affected packages where possible
            3. Consider alternative packages if updates aren't available
            4. Add exceptions for false positives using `.npmrc`
            
            ### Auto-fix Attempt
            This PR includes an attempt to auto-fix vulnerabilities using `npm audit fix`.
            Please review all changes before merging.
          branch: security/audit-fixes
          delete-branch: true

      - name: Attempt auto-fix
        if: steps.audit.outputs.has_vulnerabilities == 'true'
        run: |
          npm audit fix --audit-level=moderate
          
          # Check if fixes were applied
          if ! git diff --quiet package-lock.json; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add package-lock.json
            git commit -m "security: apply npm audit auto-fixes"
          fi

  outdated-check:
    name: Check Outdated Packages
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for outdated packages
        run: |
          echo "## Outdated Packages Report" > outdated-report.md
          echo "Generated on: $(date)" >> outdated-report.md
          echo "" >> outdated-report.md
          
          # Check for outdated packages
          if npm outdated --json > outdated.json 2>/dev/null; then
            if [ -s outdated.json ] && [ "$(cat outdated.json)" != "{}" ]; then
              echo "### Packages with available updates:" >> outdated-report.md
              echo "" >> outdated-report.md
              echo "| Package | Current | Wanted | Latest | Type |" >> outdated-report.md
              echo "|---------|---------|--------|--------|------|" >> outdated-report.md
              
              cat outdated.json | jq -r 'to_entries[] | "| \(.key) | \(.value.current) | \(.value.wanted) | \(.value.latest) | \(.value.type) |"' >> outdated-report.md
            else
              echo "✅ All packages are up to date!" >> outdated-report.md
            fi
          else
            echo "❌ Error checking outdated packages" >> outdated-report.md
          fi
          
          echo "" >> outdated-report.md
          echo "---" >> outdated-report.md
          echo "*This report is generated automatically. Consider updating packages regularly.*" >> outdated-report.md

      - name: Comment on latest commit
        uses: peter-evans/commit-comment@v4
        with:
          body-path: outdated-report.md